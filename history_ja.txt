正規表現ライブラリ SkRegExp 更新履歴

   3.1.1 2015/7/13
       ・修正）条件定義 JapaneseExt を無効にしたとき、コンパイルエラーが出るのを修正。
       ・修正）否定文字クラス内の定義済み文字クラスが
               すべて否定定義済み文字クラスになってしまうバグを修正。
   3.1.0 2015/6/27
       ・修正）文字クラスで大きな範囲の文字 ( ex. [\x{0}-\x{ffff}] ) を指定すると
               無限ループ並みに処理速度が落ちるバグを修正。
       ・修正）大文字小文字を区別、全角半角を区別、ひらがなカタカナを区別、
               検索文字列がASCII範囲の文字と言った、もっともよく使われるマッチの速度を
               30％高速化。
       ・修正）TREMatchEngine.MatchPrim の内部をループ構造にすることで
               メソッド呼び出しを減らした。
       ・変更）ライセンスをMPL1.1からMPL2.0にアップグレード。
       ・変更）TRELineBreakKind の値 lCRLF を lbCRLF に変更。
       ・変更）リテラル文字のみの選択（｜）は Trie search を使うようにした。
       ・変更）文字種判定のASCII範囲版をビットマップテーブルを使うように変更。
       ・削除）TRECharMap クラスを削除。同じ機能を TRECharClassCode の変更でサポート。
       ・削除）未使用のコードを削除。
       ・削除）TRECapture クラス と TRECaptureCollection クラスを削除。
               元々は再帰呼び出し対応のために作ったクラスだが、それ以外では使われない上、
               オーバーヘッドも大きいので使用を止めた。
       ・新規）再帰呼び出し時のキャプチャバッファとして TREGroupStack クラスを追加。
   3.0.8 2015/5/30
   　　・修正）TSkRegExp.Exec と TSkRegExp.ExecNext、または
               TSkRegExp.ExecPos と TSkRegExp.ExecNext を使ったマッチの繰り返し時に
               無限ループに陥るバグを修正。
               次のマッチ位置を示すポインタをほかの用途のものと共用していたことが原因。
               専用のポインタ TSkRegExp.FMatchStartP を追加。
   3.0.7 2014/5/23
       ・修正）数値指定の繰り返しで無限ループに陥ることがあるバグを修正。
   3.0.6 2013/12/11
       ・修正)繰り返しを含むグループを後方参照するパターンでマッチしないことがあるバグを修正。
   3.0.5 2013/12/5
       ・修正)マッチで無限ループに陥るバグを修正。
              TREQuickSearch.ExecNext で FSkipP の値をインクリメントしていなかったため。
   3.0.4 2013/11/10
       ・修正）選択（｜）の中の繰り返しが最適化されないバグを修正。
       ・修正）MultiLine モード時に改行を読み飛ばしてしまうバグを修正。
   3.0.3 2013/11/6
       ・修正）戻り読みの中で選択（｜）を使った正規表現パターンで Access violation が出るバグを修正。
               TRETrieList.Add 内のハッシュテーブルでキーが重複したときの処理が間違っていた。
       ・修正）戻り読みの中で選択（｜）を使った正規表現パターンでマッチしないことがあるバグを修正。
               最適化すべきでない部分を最適化していたため。
       ・修正）選択（｜）の際、最適化が効かなくなるバグを修正。
               TRENFA.GenerateStaeteList メソッドでリテラル文字の開始位置を正しく計算していなかった。
   3.0.2 2013/10/11
       ・修正）選択（｜）を使った正規表現パターンでマッチしないことがあるバグを修正。
               TRECharMap.IsExists 内のハッシュテーブルの読み出しが間違っていた。
       ・修正）Warning が出ていたのを修正。
   3.0.1 2013/9/25
       ・新規）Demo に SkRegExp のエンジンを使ったシンプルな grep を追加。
       ・削除）SkRegExpW の uses 節に未使用の Windows が残っていたのを削除。
       ・削除）最適化の見直しによって使わなくなった TREMatchEngine のフィールド FSaveMatchEndP を削除。
   3.0.0 2013/9/24
       ・新規）Perl 5.14 互換のメタ文字 \o{NNNNNN} と\N を追加。
       ・新規）Perl 5.14 互換の修飾子 a, d, l, u を追加。
       ・新規）Perl 5.14 互換の拡張構文 (?^...) を追加
       ・新規）TSkRegExp クラスに Strings, Index, Length の３つのプロパティを追加。
               それぞれ Groups[0].Strings, Groups[0].Index, Groups[0].Length のエイリアス。
       ・新規）POSIX文字クラスに IsSpacePerl、UnicodeProperty に SpacePerl を追加。Perl の \s と等価。
       ・新規）条件定義 USE_UNICODE_PROPERTY を追加。
               この条件を無効にすると UnicodeProp.pas を切り離すことができる。
               UnicodeProp.pas に依存するメタ文字 \p, \P, \X が普通の文字になり、
               名前付きグループに [_A-Za-z0-9] 以外の文字が使えなくなる。
       ・新規）最適化用に Aho-corasick 法に基づく TREACSearch クラスを追加。
       ・新規）テストプログラムを３本同梱。
       ・新規）SkRegExp のデバッグコード用に条件定義 SKREGEXP_DEBUG を導入。
               SkRegExp のデバッグコードは SkRegExp を開発するときしか必要ないため。
       ・更新）リテラル文字、または文字クラスが続く最短一致繰り返しを最適化した。
       ・更新）大文字小文字を区別しない比較を Unicode 標準 (CaseFolding.txt) に合わせて変更。
       ・更新）改行文字を TSkRegExp.LineBreakKind で指定できるようにした。
               従来は Unicode 標準の改行のみに対応だった。
               既定値では CR, LF, CRLF の３つを改行と認識する。
       ・変更）TSkRegExp.DecodeEspcae でグループ番号による後方参照を認識できるようにした。
               従来は (a)\1 のような正規表現で (a)#0001 と言う文字列を返していた。
               このバージョンからは (a)\1 が返る。
       ・変更）TRECharCode クラスを TRELiteralCode クラスに統合した。
       ・変更）最適化に関わるクラスと内容を見直し、処理を軽くした。
       ・変更）該当するグループ番号がない後方参照を８進数として扱うように変更。
               Perl 互換のため。
               従来は、例外を投げていた。
       ・変更）グループ名が未定義の名前付き後方参照をリテラル文字として扱うように変更。
               Perl 互換のため。
               従来は、例外を投げていた。
       ・修正）UseJapaneseExt を無効にするとコンパイルエラーが発生するバグを修正。
   2.6.2 20138/17
       ・変更）冗長だった TRENamedReferenceCode クラスの IsEqual メソッドを
               TGroup.Name プロパティを使うように変更した。
   2.6.1 2013/8/5
       ・修正）Warning が出ていたのを修正。
   2.6.0 2013/8/4
       ・修正）同名グループが仕様通りの挙動をしないバグを修正。
               最左採用するはずが最右を採用していた。
       ・変更）マッチしていないグループを参照しても例外を投げないように変更。
               該当するグループ名の TGroup インスタンスを返すようにした。
   2.5.6 2013/6/8
       ・修正）選択を内包する回数指定の繰り返しでマッチしすぎるバグを修正。
       ・修正）.* の最適化が動作していないバグを修正。
       ・修正）POSIX 文字クラスのマッチで文字列の範囲を越えてアクセスしてしまうバグを修正。
       ・修正）最小回数指定の繰り返しで、マッチ開始位置を認識できないバグを修正。
       ・修正）正規表現パターンの中で後方参照の使用の有無を正しく判定できないバグを修正。
   2.5.5 2013/6/5
       ・修正）回数固定の繰り返し（例：([a-c])b*?\2){3}）でマッチしないことがあるバグを修正。
               a{3} は a{3}+ と同じなのでバックトラックしないのが正しいが、バックトラックしていた。
       ・修正）最短一致の繰り返し（例：([a-c])b*?\2){3}）でマッチしないバグを修正。
               バックトラックステータスを保存すべきところで保存していなかった。
       ・修正）多重繰り返しの中に繰り返しの選択があるとき、マッチしないことがあるバグを修正。
               繰り返しを継続すべきところでしていなかった。
       ・修正）グループ内で(*ACCEPT)で中断したとき、該当グループの情報が更新されないバグを修正。
       ・新規）条件定義 CHECK_MATCH_EXPLOSION が無効時の幾何級数的マッチ対策を行なった。
               回数が文字列の長さ×２以上になったら繰り返しを中止するようにした。
   2.5.4 2013/5/1
       ・修正）戻り読み、および否定戻り読みで正しくマッチしないバグを修正。
       ・修正）条件式で ?(R) を指定したとき、再帰中でも真にならないバグを修正。
       ・修正）正規表現オプション (?x) で文字を読み飛ばしすぎるバグを修正。
       ・修正）キャプチャグループ内の繰り返しを最適化しすぎてマッチしないバグを修正。
       ・修正）ブランチリセット内で名前付グループを使ったとき、先頭以外のグループ名が保持されないバグを修正。
       ・修正）ブランチリセット内で分岐中の追加グループも同じグループとして扱ってしまうバグを修正。
       ・修正）バックトラック時、キャプチャバッファの内容によって、キャプチャ文字列がヌルに置き換わってしまうバグを修正。
       ・変更）POSIX 文字クラスの cntrl を \p{Cc} に変更した。Perl互換のため。
       ・変更）構文木のデバッグに使っていた DumpParse メソッドを削除。
               これにより uses 節から Comctrls を削除でき、DEBUG 時でも Windows 依存を脱却した。
       ・削除）未使用のリソース文字列を削除。
   2.5.3 2013/4/26
       ・修正）先読みがパターンの後ろにあるとき、正しくマッチしないバグを修正。
   2.5.2 2013/4/23
       ・修正）戻り読み内で文字クラスを使ったとき、戻るべき文字数を正しくカウントできないバグを修正。
       ・修正）?+ でバックトラックしてしまうバグを修正。
       ・修正）文字クラスの繰り返しの直後に文字クラス内に存在するリテラル文字があるとき、最適化に失敗し、マッチしないバグを修正。
       ・修正）戻り読み内でグループが使えないバグを修正。
       ・修正）戻り読み内で選択が使えないバグを修正。
       ・修正）繰り返しがパターンの先頭にあるとマッチ失敗することがあるバグを修正。最適化で開始位置の情報をリセットしていなかった。
       ・修正）回数指定の繰り返しで、最小回数に満たないのにマッチを終了してしまうバグを修正。
       ・変更）条件式で未定義のグループ番号を指定したときは条件式を偽とするように変更。
               従来は構文エラーとしていたが Perl 互換のため変更。
       ・変更）文字クラスで - （マイナス）の後に定義済文字クラスが続くときに構文エラーとしていたのを変更。
               文字範囲指定と解釈していたのを - （マイナス）1文字リテラルと解釈するようにした。
       ・変更）$ が改行とマッチし、かつ、文字列末尾の場合、マッチ成功に変更。
       ・変更）文字クラス内で範囲外の8新数の数値を指定したとき、文字として扱うようにした。従来はゼロとしていた。
  2.5.1 2013/4/20
      ・修正）相対グループ番号によるグループ呼び出しで Access violation エラーになるバグを修正
  2.5.0 2013/4/15
      ・更新）WindowｓAPIを使っていた文字変換処理を自前のモノに書き換えた。
              これによりWindows依存から脱却した。
  2.3.1 2013/3/21
      ・修正）リテラルの選択（｜）の直後にリテラル、または文字クラスの回数指定量指定子（[0-9]{2}）があるとき、
              正しく最適化できないバグを修正。
  2.3.0 2013/3/15
      ・新規）TSkRegExp クラスに EscapeRegExChars クラス関数を追加。
              EscapeRegExChar はメタ文字を通常の文字としてエスケープするクラス関数。
      ・削除）ヘルプファイルの添付を中止。
              取扱説明書は http://skregexp.komish.com/docs/ を参照のこと。
  2.2.0 2013/1/25
      ・更新）先頭文字／文字クラスの識別による最適化で、否定文字クラスに対応。
      ・更新）先頭文字／文字クラスの識別による最適化の処理を TRELeadMap クラスに集約した。
      ・更新）(^ab|^bc) のように、選択の中で ^ や \A が使われていても最適化できるようにした。
              このパターンでは文字列の先頭以外ではマッチしない。
              にも関わらず、以前のバージョンでは、先頭でマッチが失敗しても
              すべての文字位置でマッチを試行していた。
              なお、以前のバージョンでも ^(ab|bc) と書けば文字列の先頭でのみマッチを試行する。
      ・更新）マッチに必要な文字数による最適化をサポート。
              たとえば、a{10,} と言うパターンは文字数が 10 文字以上ないと決してマッチしない。
              検索対象文字列がマッチに必要な文字数より小さいときは即マッチ失敗となる
              なお、以前のバージョンでもサポートしていたが、グループ呼び出しなど、
              一部のパターンで正しい数より少ない文字数を返していた。
      ・修正）ヘルプの誤植を修正。
  2.1.0 2012/12/23
      ・更新）先頭文字／文字クラスの識別による最適化をサポート。
      ・更新）ソースコードのクラス定義を関連のある順に並び替えた。
      ・更新）[a-z] のような範囲指定の文字クラスも TRECharMap を使うようにした。この方が速いため。
      ・削除）上記変更により、不要になったTRERangeCharCode クラスを削除。
      ・修正）ヘルプの誤植を修正。
  2.0.4 2012/12/11
      ・修正)文字クラスで一部の全角半角同一視、ひらがなカタカナ同一視がマッチしないバグを修正。
  2.0.3 2012/12/7
      ・修正）一部の最適化が機能しないバグを修正。
  2.0.2 2012/12/6
      ・修正）条件付きグループで、再帰チェックを条件にしたとき、多くのケースでマッチしないバグを修正。
  2.0.1 2012/12/2
      ・修正）キャプチャが 20 個までしかできないバグを修正。
  2.0.0 2012/12/1
      ・変更）再帰グループの仕様を Perl 互換に変更。
              1.5 までは PCRE と同様、再帰グループの中にバックトラックしなかった。
              2.0 からは Perl と同様、再帰グループの中にバックトラックする。
      ・変更）再帰グループ内のキャプチャの仕様を Perl 互換に変更。
      ・変更）パターンの中に同じ名前のグループがあったときの仕様を Perl 互換に変更。
              1.5 までは、番号の大きいグループから順に調べ、どれかがマッチしたらマッチ成功としていた。
              2.0 からは、一番左側で定義されているグループを参照する。
      ・変更）\s、 \S を Perl 互換に変更。\x0b にマッチしなくなった。
      ・変更）POSIX 文字クラスに [[:IsSpacePerl:]]、[[:^IsSpacePerl:]] を追加。Perl の \s、\S と同じマッチを行う。
      ・変更）最適化のための情報収集を NFA 作成と同時に行なうようにした。
  1.5.8 2012/11/27
      ・修正）TREQuickSearch.ExecNext でポインタを進める長さが間違っており、
              マッチしないことがあるバグを修正。
  1.5.7 2012/11/22
      ・修正）(*SKIP) の使い方によっては無限ループに陥るバグを修正。
  1.5.6 2012/11/9
      ・修正）名前付後方参照 \k で参照位置によってアクセス違反になるバグを修正。
  1.5.5 2012/11/8
      ・修正）３つ以上の選択（｜）内に単純な繰り返しがあるとき、正しくマッチしないバグを修正。
  1.5.4 2012/10/27
      ・修正）文字クラスの並びによってはマッチしないバグを修正。
  1.5.3 2012/10/27
      ・修正）文字クラスの並びによってはマッチしないバグを修正。
  1.5.2 2012/10/27
      ・修正）マッチしないユニコードプロパティがあったのを修正。
      ・修正）Demo フォルダの UniPropBuilder にマッチしないユニコードプロパティを生成するバグがあったのを修正。
  1.5.1 2012/10/26
      ・新規）Demo フォルダに UnicodeProp.pas を自動生成するプログラム UniPropBuilder を追加。
      ・更新）Unicode 6.2 に対応。
      ・更新）TRECharMap.IsExists で、検索対象文字が範囲外ならすぐに False を返すようにした。
      ・更新）TRECharClassCode.IsEqual で、検索対象文字が範囲外ならすぐに False を返すようにした。
      ・更新）a{2,4} 、\p[Hiragana}{10,} などの固定長の繰り返しを最適化した。
      ・更新）文字クラスのマッチを、負荷の軽い順に実行するようにした。
      ・修正）Unicode Property \p の L& と LC がマッチしないバグを修正。
      ・修正）ユニコードプロパティの別名表記（ \p{Lu} に対する \p{Uppercase_Letter} ）が
              廃止されてなかったのを修正。
      ・修正）Perl 5.10 の (*VERB:ARG) の形式で記述する、特殊なバックトラック制御記号に対応。
      　　　　1.5.0 で対応していたがどこにも記載していなかったのを修正。
      ・修正）Unicode 改行文字 #$2028 がマッチせず、そうではない #$2020 がマッチするバグを修正。
      ・廃止）条件定義 HIsHexDigit を削除。
  1.5.0 2012/10/19
      ・更新）Unicode 6.0 に対応。
      ・更新）改行文字を Unicode 改行文字に完全に統一。
        ごく一部にCRLFしか改行文字としない処理が残っていたのを削除。
      ・新規）条件付グループに使える条件として、再帰チェック、Callout、DEFINE に対応。
      ・新規）再帰パターン用スタックを追加。条件付きグループの再帰チェック用。
      ・廃止）TSkRegExp クラスの以下の６つのプロパティを廃止した。
        Match, MatchPos, MatchLen, NamedGroup, NamedGroupPos, NamedGroupLen
        ただし、条件定義で無効になっているだけなので、OLD_PROPERTY を条件定義すれば利用できる。
      ・廃止）ユニコードプロパティの別名表記（ \p{Lu} に対する \p{Uppercase_Letter} ）を廃止。
  1.4.11 2012/10/25
      ・修正）ユニコードプロパティの L& がマッチしないバグを修正。
      ・更新）Unicode version 6.2 に対応。
      ・廃止）湯にオードプロパティの別名表記（\p{Lu} に対する
  1.4.10 2012/10/8
      ・修正）TSkRegExp.ExecPos だけを連続して呼び出すとメモリを無駄に消費するバグを修正。
  1.4.9 2012/10/6
      ・変更）OnCallout が最適化の過程で呼び出されないようにした。
  1.4.8 2012/10/4
      ・修正）グループ呼び出し時にキャプチャバッファ内の文字位置がずれることがあるバグを修正。
  1.4.7 2012/10/3
      ・変更）TSkRegExp.DecodeEscape メソッド内の例外を Exceptioin から ESkRegexpRuntime に変更。
      ・修正）\p{name} および \P{name} のname に、文字の区切りとしてアンダースコア(_)、
              ハイフン(-)、スペースがあると認識しないバグを修正。
  1.4.6 2012/10/1
      ・修正）条件式で (?(条件式) 式1 ) のとき、マッチが正しくないバグを修正。
              条件式が偽の時、次の式に進むところをバックトラックしていた。
      ・修正）一部の繰り返しでバックトラックの重複があったのを修正。
              マッチには影響ないが無駄な照合が起こるため遅くなる。
      ・削除）未使用の宣言を削除。
  1.4.5 2012/9/29
    ・修正）TREPropertyCode.IsEqual がマッチ範囲を越えてアクセスするバグを修正。
            このバグは最適化できないか、または最適化が無効な際に起こる。
    ・変更）TRECode から派生するすべての IsEqual メソッドでマッチ範囲外を判定する方法を統一。
    ・変更）空の繰り返しを”認識できない正規表現”エラーとしていたのを
           “繰り返しの対象がありません”エラーに変更した。
    ・削除）決して使われることのないコードを削除。
  1.4.4 2012/9/28
     ・修正）戻り読みの中で利用できない正規表現があってもコンパイルが通ってしまうバグを修正。
     ・修正）戻り読みの中で \K を使うとが決してマッチしないバグを修正。
             TRegEx (PCRE) ではコンパイルエラーになるが、Perl互換ため対処。
     ・修正）ワーニングエラーが大量に出ていたのを修正。
  1.4.3  2012/9/28
    ・修正）TREQuickSeach で検索時、対象テキストの長さを超えてアクセスするバグを修正。
    ・修正）(a*!b*){2}のように、繰り返しを含む選択があるとき、正しくマッチしないバグを修正。
    ・変更）非推奨の以下の６つプロパティを使っていた内部の処理を Groups プロパティで書き換えた。
            Match, MatchPos, MatchLen, NamedGroup, NamedGroupPos, NamedGroupLen
    ・変更）最適化の適用範囲がバラバラだったのを整理にした。
    ・変更）OnCallout で渡される TCalloutData.PatternLength の値に最適化の結果を反映。
            "abc" のように連続したリテラルは、最適化前は"a" "b" "c" と 1 文字ずつ 3 回の比較が行われる。
            最適化後は"abc"を 1 回の比較で行う。
            最適化後の連続したリテラルの長さを OnCallout に渡すようにした。
  1.4.2  2012/9/25
    ・修正）TREPropertyCode.IsEqual がテキストの末尾を越えてアクセスするバグを修正。
            このバグは最適化できないか、または最適化が無効な際に起こる。
    ・変更）デバッグ用に使用する TRENFAState の GetString メソッドを ToString に名前変更。
  1.4.1  2012/9/22
    ・修正）AnsiUpperCase、AnsiLowerCase を自前の関数に置換。
            ANSI Delphi で意図しない UNICODE <--> ANSI の変換が起こるため。
  1.4.0  2012/9/21
    ・新規）正規表現 (?Cn) をサポート。TSkRegExp.OnCallout イベントを実装することで
            正規表現をカスタマイズできる。
    ・新規) Callout のサンプルプログラムを２本添付。
    ・新規）TGroup に SubExpression プロパティを追加。
    　　　　このプロパティは読み出し専用で部分正規表現を取得できる。
    ・新規）TSkRegExp クラスに、MatchOffset、MatchLength プロパティを追加。
    ・変更）TSkRegExp クラスの６つのプロパティを非推奨とした。
            Match, MatchPos, MatchLen, NamedGroup, NamedGroupPos, NamedGroupLen
            これらのプロパティは次期バージョンから削除される。
  1.3.4  2012/9/7
    ・修正）POSIX 文字クラスが文字クラスの外でも動作するバグを修正。
            [:alnum:] と言う記述はコンパイルエラーになるはずがならなかった。[[:alnum:]] が正しい。
    ・修正）名前付きグループの後方参照で、後で定義される名前付グループを参照したときに、
            アクセス違反が発生するバグを修正。ex. \k<n>(?<n>a)
            ちなみに、この正規表現は常にマッチしない。
    ・修正）ヘルプの記述漏れを修正。
            TSkRegExp のクラス関数　RegIsMatch、RegMatch、RegReplace、RegSplit の説明が抜けていた。
  1.3.3  2012/9/5
    ・修正）RegReplace グローバル関数で置換出ないバグを修正。
  1.3.2  2012/9/3
    ・修正）TREQuickSeach で２文字のパターンの検索時、対象テキストの長さを超えてアクセスするバグを修正。
  1.3.1  2011/10/15
    ・修正）グループ番号が範囲外だとアクセス違反が発生していたが、例外を発生させるように変更。
    ・修正）グループ名が存在しないとアクセス違反が発生していたが、例外を発生させるように変更。
    ・修正）ヘルプに存在しないトピックがあったのを追加。
  1.3.0  2011/9/8
    ・修正）再帰パターンのマッチ結果を TRegEx により近づけた。
    ・新規）先読み/後読みを最適化。
    ・新規）(?!) を最適化。
    ・新規）デバッグ用に、マッチ経過を保持する TSkRegExp.FMatchProcess を追加。
            この変更により、{$DEFINE DEBUG} 時のマッチ速度がさらに遅くなります。
    ・新規）低レベルの文字列比較用に REStrLComp 関数と REStrLIComp 関数を追加。
            ANSI Delphi と Unicode Delphi の違いはここで切り分けることにした。
            これにより、ANSI Delphi での処理速度が少し速くなる。
    ・変更）すべての文字列比較を REStrLComp と REStrLIComp を使って書き換えた。
    ・変更）未使用のクラス、メソッドを削除。
    ・変更）TREGroup, TREGroupCollection の名前をそれぞれ TGroup, TGroupCollection に変更し、
            ヘルプで公開した。
    ・変更）TSkRegExp.Groups プロパティをヘルプで公開した。
    ・変更）グローバル関数はクラス関数を呼び出すように変更した。
　1.2.6  2011/9/3
    ・修正）Delphi XE2 でコンパイルエラー、および、Access violation エラーになる問題を修正。
            原因は、XE2 で PPointerList の定義が変更になったため。
            Delphi XE2 でのみ型 PPointerList を追加することで対処。
  1.2.5  2011/7/11
  　・修正）文字クラスの範囲指定で、全角半角同一視、ひらがなカタカナ同一視が使えなかったバグを修正。
  1.2.4  2011/5/18
    ・修正）条件式で、グループ名を条件に指定してもマッチしないバグを修正。
  1.2.3  2011/5/14
    ・修正）後読みが仕様通りでなかったバグを修正。
            仕様では最上位の選択肢は異なる長さが指定可能だがそうなっていなかった。
  1.2.2  2011/5/13
    ・修正）先読み、後読み内で繰り返しを使った時、無限ループに陥ることがあるバグを修正。
  1.2.1  2011/5/2
    ・修正）ANSI Delphi でコンパイルできなかったのを修正。
  1.2.0  2011/4/29
    ・修正）全角半角一致モードで、行頭の ^ と 行末の $ をメタ文字として認識できないバグを修正。
    ・修正）ヘルプの誤植を修正。
    ・変更）TREMatchEngine.MatchPrim 内の繰り返しに関する処理を書き直した。
            冗長、かつ、読みにくかったため。
    ・変更）バックトラック用のキャプチャバッファの保存先を TREGroups.push/pop を使うようにした。
            当初の用途に使わなくなったため。
    ・変更）RegSplit グローバル関数を手続きに変更した。
            関数の意味がないため。
    ・変更）未使用の識別子、メソッドを削除。
    ・変更）TRELexMode の要素を lmOptimize, lmNormal の2つだけにした。
            他の要素を使う予定がなくなったため。
    ・変更）TREStack のフィールドを整理。冗長だったため。
  1.1.17  2011/4/22
    ・修正）IgnoreZenHan プロパティが設定できないバグを修正。
    ・修正）再帰パターンの挙動は Perl 5.10 とは異なり、再帰グループ内にはバックトラックしない仕様にした。
            実際には以前からそうだったのだがヘルプに明記していなかった。
    ・変更）TREMatchEngine.MatchRecursion 内の冗長なコードを削除。
    ・変更）TREMatchEngine クラス内の MatchOne メソッドを削除。
    ・修正）ヘルプに DefinedCharClassLegacy プロパティに関する記述がなかったのを追加。
    ・修正）ヘルプの IgnoreZenHan プロパティで構文が property IgnoreWidth: Boolean; となっていたのを修正。
    ・修正）ヘルプの IndexFromGroupName プロパティの戻り値が間違っていたのを修正。
  1.1.16  2010/12/25
    ・新規）UnicodeProp.pas の Block を使うかどうかを {$DEFINE BLOCK} で選択可能にした。
    ・変更）未使用のネストレベル付後方参照用のコードを削除。
    ・変更）未使用の文字クラス集合用のコードを削除。
    ・変更）未使用のリソースストリングを削除。
    ・修正）\p で、'Is' ではじまる存在しない Block を指定したとき、
            エラーメッセージに表示される Block 名が 'In' と表示されるバグを修正。
  1.1.15  2010/12/17
    ・修正）\X のマッチ範囲が間違っていたのを修正。
    ・変更）\X の繰り返しを最適化した。
    ・変更）冗長なプロパティのアクセスメソッドを削除。
  1.1.14  2010/12/12
    ・修正）バージョン番号の更新忘れを修正。
  1.1.13  2010/12/11
    ・修正）"2010 or later/ja" フォルダ 内の SkRegExpConst.pas 内に
            リソースストリング sGroupNameIsEmpty が抜けていたのを修正。
  1.1.12  2010/12/10
    ・修正）\g の再帰パターンでマッチしないパターンがあったのを修正。
    ・新規）TRECaptureCollection に Assign メソッドを追加。
    ・新規）TREGroup に Assign メソッドを追加。
    ・新規）TREGroupCollection に Assign メソッドを追加。
    ・変更）シンプルな {n,m} の繰り返しを別処理にした。
  1.1.11  2010/11/24
    ・修正）選択の深い階層のグループ内で $ をメタ文字として認識できないバグを修正。
    ・新規）文字列中のエスケープ文字を文字コードに変換する DecodeEscape グローバル関数を追加。
    ・新規）文字列中の文字コードをエスケープ文字に変換する EncodeEscape グローバル関数を追加。
  1.1.10  2010/11/20
    ・新規）TSkRegExp クラスに Replace メソッドを追加。
    ・新規）TSkRegExp クラスに Split メソッドを追加。
    ・新規）TSkRegExp.Exec メソッドのラッパー関数 RegIsMatch 関数を追加。
    ・新規）TSkRegExp.Exec メソッドのラッパー関数 RegMatch 関数を追加。
    ・新規）TSkRegExp.Replace メソッドのラッパー関数 RegReplace 関数を追加。
    ・新規）TSkRegExp.Split メソッドのラッパー関数 RegSplit 手続きを追加。
    ・新規）ExecRegExp 関数を削除。
    ・修正）TSkRegExp.ExecNext を Exec、ExecPos と同じ構造にした。
  1.1.9   2010/11/18
    ・修正）\n がマッチしないバグを修正。
  1.1.8   2010/11/17
    ・修正）TSkRegExp.MatchCore で、マッチの先頭を上書きしてしまっていた。
    　　　　このため、^\d を連続でマッチさせたときの結果がおかしくなっていた。
    ・修正）行頭一致の最適化が死んでいたのを生き返らせた。
  1.1.7   2010/11/5
    ・修正）(?b) のような間違ったオプション指定がエラーにならないバグを修正。
    ・変更）TREMatchEngine 抽象クラスを廃止。
            マッチエンジンの切り替え（ＤＦＡエンジンの実装）を後回しにしたため。
    ・新規）先頭文字がドットのときの最適化を追加。
    ・新規）幾何級数的マッチが起こらないようなチェックを追加した。
            条件定義 CHECK_MATCH_EXPLOSION を無効にすればチェックを行わない。
  1.1.6   2010/10/24
    ・修正）\G の動作が Perl と異なっていたのを修正。動作を間違えて理解していたのが原因。
    ・変更）SkRegularExpression.pas を別配布にした。保守が面倒なため。
    ・変更）文字クラスを最適化し、マッチ速度を向上させた。
    ・変更）更新履歴を別ファイル（このファイル）にした。
  1.1.5   2010/10/9
    ・変更）Perl 互換の対象を 5.10 に変更。5.9.5 互換が勘違いだったため。
    ・変更）メタ文字 \g の非互換は書式で区別するように変更。
    ・変更）上記変更に伴い (?b) オプションを廃止。
    ・変更）上記変更に伴い BackwardCompatible プロパティを廃止。
    ・変更）メタ文字 \h の非互換はコンパイルオプション HIsHexDigit のオンオフで対処。
    ・新規）先頭文字一致用に TRECharMap クラスを新設。
    ・変更）先頭文字一致のロジックを変更。複数以上の先頭文字があるときは、TRECharMap を使うようにした。
    ・変更）先頭文字一致用から Aho-Corasick 法による検索を削除。私の力では性能が出ないため。
    ・新規）TRECharMap 作成用にConvertString, ToWide, ToHalr, ToHiraganak, ToKatakana の各変換関数を追加。
            テーブルを作るのが面倒なので Windows API を使用。そこそこ性能が出ているので妥協した。
    ・新規）TRECode に 文字クラスの最適化用の Compare メソッドを追加。未実装。
  1.1.4   2010/9/17
    ・新規）\Q..\E を実装。
    ・変更）最適化における、先頭文字一致のロジックを変更。
            今までは事前にマッチ位置のリストを作っていたが、
            マッチ位置を見つけたらすぐにエンジンを起動するように変更した。
    ・変更）a*b などの先頭文字が不定の最適化時、[ab] を検索するように変更。
            従来は b があるかだけをチェックし、もしあれば文字列の先頭から正規表現エンジンを起動していた。
    ・変更）ヘルプで使う用語を Perl の日本語ドキュメントと同じにしました。
    ・変更）\h, \v を BackwardCompatible プロパティの影響外にした。
            \v は \x0b を含むため。
            \h は条件定義 HIsHexDigit で対応。
  1.1.3   2010/9/9
    ・新規）Perl 5.9.5 のブランチリセットを実装。(?|式)
    ・変更）定数 CONST_VERSION を SkRegExpConst.pas から SkRegExp.pas へ移動。
    ・変更）TSkRegExp クラスから Replace, Split, Substitute 各メソッドを削除。
    ・新規）TRECapture クラスと TRECaptureCollection クラスを追加。
            名前は .NET の影響だが用途は異なる。
    ・変更）TREGroup の FList を TList から TRECapture に変更。
    ・変更）TREGroups の名前を TREGroupCollection に変更。
  1.1.2   2010/9/5
    ・変更）version 1.1.1 で間違ったファイルを公開したため更新。
  1.1.1   2010/9/4
    ・修正）ヘルプの誤植を大量に修正。
    ・修正）数値のグループ名がエラーにならないバグを修正。
    ・変更）TREGroups のグループ名をハッシュテーブルによる管理に変更。
    ・変更）TREGroups 内にマッチ結果を出力させるように変更。
    ・変更）TREGroups をプロパティとして公開。
  1.1.0   2010/8/26
    ・新規）例外にコンパイルエラー用の ESkRegExpCompile と実行時エラー用の ESkRegExpRuntime を追加。
    ・変更）tkGroupStart、nkGroupStart をそれぞれ tkGroupBegin、nkGroupBegin に変更。
    ・変更）TREQuickSearch の MatchCore メソッドを IsMatch に変更。
    ・新規）Aho-Corasik 法による検索を行うクラス、TSkHashList、TRETrieNode、TRETrieTree を追加。
    ・新規）正規表現の先頭が選択の場合は、Aho-Corasick 法によって事前検索を行うようにした。
    ・変更）TRENamReferenceCode クラスを TRENamedReferenceCode に変更。
    ・新規）条件分岐構文を追加。(?(if)then|else)
    ・新規）条件分岐構文を実行する TREIfThenReferenceCode クラス、TREIfThenNamedReferenceCode クラスを追加。
    ・新規）複数のマッチエンジンサポートのため、TSkRegExp.LexMode プロパティを追加。
    ・新規）TRELex のトークン先読みを復活。
    ・新規）複数のマッチエンジンサポートのため、TREMatchCore 抽象クラスを追加。
    ・変更）TSkRegExp内にあったマッチエンジンを TRETraditionalMatchCore クラスに分離。
    ・変更）利用していないメソッドを削除。
    ・変更）CharNext、CharPervメソッドを関数にした。IsLeadChar で検査していたポインタをこれらの関数で処理するようにした。
    ・変更）連続したリテラルは、最適化時ではなく、 TREParser で処理することにした。これにより最適化にかかっていた時間が短縮される。
    ・新規）正規表現の末尾がリテラルのときは、先にそのリテラルがあるかをチェックするようにした。
    ・変更）最適化を大幅に簡略化。これにより最適化にかかっていた時間が短縮される。
    ・新規）UnicodeProperty で一般プロパティのフル記法をサポート。ex. \p{Uppercase_Letter}
    ・新規）UnicodeProperty に L& を追加。\p{Lu}、\p{Ll}、\p{Lt} のすべての文字にマッチする。
    ・変更）(?... の字句解析処理を TRELex.LexLeftPar として分離。
    ・変更）TSkRegExp.Exec、ExecNext、ExecPos の構造を見直した。
    ・新規）TSkRegExp.Exec、ExecNext、ExecPos の下請け関数 MatchCore を追加。
    ・新規）TREGroups クラスに push, pop メソッドを追加。
    ・変更）コンパイルエラーの表示を修正。わかりやすくした。
    ・変更）エラーメッセージとそれ用のリソースストリングを修正した。
    ・新規）8進数表記 \033 、\G、をサポート。
    ・新規）Perl 5.9.5 互換の \g, \v, \V, \h, \H, \K, \R , (?n), (?-n), (?+n), (?R), (?0), (?&name), (?P<n>), (?P=n) をサポート。
    ・新規）\g, \v, \V, \h, \H を Perl 互換に変更。
    ・変更）TRECharCode, TRELiteralCode で表示できない文字を16進表示するようにした。
            version 1.0 と同じ動作にするには TSkRegExp.BackwardCompatible プロパティを True に指定。
  1.0.39  2010/10/29
    ・新規）TSkRegExp クラスに IndexFromGroupName プロパティを追加。
            SkRegularExpressions.pas version 0.6 用。
  1.0.38  2010/10/22
    ・修正）同名のキャプチャグループを複数以上使用し、自身を後方参照したループで、
            キャプチャバッファの参照先が仕様とは違うバグを修正。
            例) 正規表現 "(?<n>a)(?<n>b)(?<n>\k<n>c)*" を "abbcbc" にマッチさせたとき、
                以前のバージョンでは "abbc" にマッチした。ループの中で３番目の
                キャプチャバッファを参照してしまうため。
                しかし、仕様通りなら参照するのは２番目のバッファで "abbcbc" にマッチするべき。
  1.0.37  2010/10/10
    ・修正）POSIX文字クラスの ascii で、対象文字列の末尾が制御文字だと長さがオーバーするバグを修正。
    ・変更）\p で IsAlnum などの POSIX 文字クラスを指定できるようにした。
  1.0.36  2010/10/8
    ・修正）ConvertREString 関数で文字によっては正常に変換できないバグを修正。
    ・変更）\p で Unicode.org 推奨のプロパティ名を受け付けるように変更。
            大文字小文字を同一視し、語の区切りのスペース、ハイフン、アンダーバーを無視して解釈する。
            ブロック名は In 以外にも .NET と同じ Is でも指定できるようにした。
  1.0.35  2010/10/1
    ・修正）UnicodeProp.pas のコンパイル時に警告が出ていたのを修正。
  1.0.34  2010/9/28
    ・改良）UnicodeProp.pas を改良。ロジックを変更し、処理速度を向上させた。
    ・改良）SkRegExpW.pas で持っていた PropertyNames グローバル変数を UnicodeProp.pas に移動。
    ・修正）\p を使ったとき、マッチの長さがおかしくなるバグを修正。
    ・修正）ヘルプを改善。
  1.0.33  2010/9/6
    ・修正）先読みで .*、最短一致量指定子を使うと無限ループに陥るバグを修正。
  1.0.32  2010/9/6
    ・修正）TSkRegExp クラスに GroupNameFromIndex プロパティがあるとヘルプに記載があるが、
            存在しなかったのを修正。
  1.0.31  2010/9/4
    ・修正）TSkRegExp.MatchPos の非マッチ時の返り値がヘルプの記述と違うのを修正。
            ヘルプでは 非マッチ時にのみ 0 が返るはずが、空文字のマッチでも 0 が返るのを 1 に修正。
  1.0.30  2010/9/4
    ・変更）TSkRegExp.ExecPos で範囲指定を行ったときは、指定した範囲が文字列全体だと扱うようにした。
            前バージョンでは、文字列の一部として扱っていた。この変更は、.NET の仕様に合わせたもの。
    ・変更）TSkRegExp.ExecPos メソッドの 第2パラメータのデフォルトパラメータを -1 から 0 に変更。
  1.0.29  2010/9/3
    ・新規）TSkRegExp.ExecPos で範囲を指定できるようにした。
    ・新規）TSkRegExp に FMatchTopP, FMatchEndP を追加。ExecPos の範囲対応用。
    ・変更）TSkRegExp.ExecPos で範囲外の値が指定されたときは、例外ではなく False を返すようにした。
    ・変更）TSkRegExp.CheckExitState メソッドを削除。未使用のため。
    ・修正）ExecPos の変更に伴い、ヘルプファイルを加筆修正。
  1.0.28  2010/8/30
    ・修正）"2010 or later" フォルダの "SkRegExpConst.pas" が UTF-8 になっていないの修正。
    ・修正）"2010 or later" フォルダの "SkRegExpConst.pas" は バージョンが 異なっていたのを修正。
  1.0.27  2010/8/30
    ・修正）SkRegExpCont.pas の英語メッセージに欠損があったのを修正。
    ・変更）ソースファイルの文字コードを SJIS から UTF-8 へ変更。
    ・新規）Delphi 2010 以降の言語切り替えに対応。
            アーカイブに"2010 or later"フォルダを追加。
  1.0.26  2010/8/27
    ・修正）グループ呼び出しで冗長な処理を修正。
    ・新規）TREGroups に push, pop メソッドを追加。
  1.0.25  2010/8/20
    ・修正）\P が使えなかったのを修正。
  1.0.24  2010/8/14
    ・修正）リテラル文字列の単純な繰り返しで、バックトラック用のステートを余分に保存していたのを修正。
    ・新規）TRECode に エレメント数を返す CharCount プロパティを追加。
    ・修正）上記変更にあわせるため、関数だった Size をプロパティに変更。
    ・修正）TSkRegExp.CharNext, CharPrev を関数にした。
    ・修正）IsLeadChar を使っていたポインタ操作を CharNext, CharPrevに書き換えた。
  1.0.23  2010/8/7
    ・修正）TREQuickSeach.MatchCore のANSI版でループ範囲の指定が間違っていたのを修正。
            文字列の末尾に検索対象文字列があった場合、場合によってはマッチしないことがあった。
  1.0.22  2010/8/6
    ・修正）単純な繰り返しで、バックトラック用のステートを一つ余分に保存していたのを修正。
  1.0.21  2010/7/24
    ・修正）TSkRegExp.CharNext が CharPrev と同じになっていたのを修正。今まで使っていなかったため気づかなかった。
    ・修正）"a+a" が "a" にマッチしてしまうバグを修正。
  1.0.20  2010/7/21
    ・改良）"a+"のような単純な繰り返しを先頭文字検索の対象にした。
  1.0.19  2010/6/5
    ・修正）行頭アンカーを指定したとき、マッチが空文字列になるバグを修正。
    ・修正）TSkRegExp.Optimize メソッド内の GetConcatStrings 関数でアクセス違反になるバグを修正。
      Free されたオブジェクトのコピーを使っていたため。
    ・修正）TSkRegExp.Optimize メソッド内の OptimizeLiteralConcat 関数で未使用のTListオブジェクトを削除。
    ・変更）TREQuickSearch.Exce メソッドを Exec メソッドに名前変更。
  1.0.18  2010/5/22
    ・修正）正規表現にサロゲートペアが含まれているとマッチしないことがあるバグを修正。
    ・改良）リテラル文字を含む検索にはTQuickSearchを使うようにした。
      全角半角を区別しない、カタカナひらがなを区別しない検索など、有効な使い方を見つけたため。
    ・改良）TSkRegExp.Optimize 内の OptimizeLiteralConcat で、
      リテラル文字が連続しているのに、一つのTRELiteralCode にできないことがあったのを修正。
  1.0.17  2010/5/15
    ・TSkRegExp.Optimize でキャプチャしない括弧を削除するようにした。
    ・バグ）TSkRegExp.Optimize 内関数 DeleteStateList の ExtentTo の
      範囲チェックが間違っていたのを修正。
  1.0.16  2010/5/14
    ・バグ）文字クラス使用時に正常にマッチしないバグを修正。
      TRELex.LexBrace の最後のCharNextの第２パラメータが不定だったため。
    ・連続したリテラル文字と選択の最適化を TSkRegExp.Optimize で行うようにした。
    ・上記の最適化の都合で、キャプチャしない括弧でも nkGroupStart、nkGroupEnd を生成するようにした。
    ・TSkRegExp.FLeadCode の生成を TSkRegExp.GenerateLeadCode で行うようにした。
    ・TRELex のトークン先読みバッファを削除。使わなくなったため。
  1.0.15  2010/5/7
    ・正規表現がリテラル文字だけで構成される場合は通常の検索を行うようにした。
    ・先頭必須文字がある場合は、先に検索し、必要な箇所でのみ照合を行うようにした。
    ・文字列比較が乱立していたのを整理するため、REStrLJCompとRECompareStringを書き直し、
      文字列の比較はこの関数を使うように変更した。
    ・StringToUCS4Stirng関数を削除。1.0.14での応急処置だったため。
    ・TQuickSearchを削除。StrPosでも十分速いため。
  1.0.14  2010/5/4
    ・最適化によって発生したバグを大幅修正。
    ・FLeadCode の生成を TRENFA.GenerateStateList で行うように復活。
    ・GenerateLeadCode を復活。
    ・TRELiteralCode の生成を Primayで行うように復活。
    ・TSkRegExp.Optimize の OptimizeChar、OptimizeSelect を廃止。
    ・TREChar を UCS4Char に、TRECharArray を UCS4String に変更。
  1.0.13  2010/4/23
    ・TSkRegExp.FLeadCode の生成をNFA作成後に行うように変更。
    ・「大文字小文字を区別しない」の照合に使っていた StrLIComp を AnsiStrLIComp に置換。
      大文字小文字を区別しない場合の、マッチする／しないがわかりにくかったため。
    ・QuichkSearch関数で検索オプションを指定できなかったバグを修正。
    ・QuickSearch関数のstringバージョンを削除。使っていないため。
  1.0.12  2010/4/20
    ・TSkRegExp.Optimize の中で OptimizeSelect と OptimizeChar が
      コメントアウトされて無効になっていたのを修正。
      このため、1.0.11 の最適化が行われませんでした。
  1.0.11  2010/4/18
    ・TRECode.ExecRepeatのパラメータを変更。この方が速いので。
    ・1.0.10で削除した TSkRegExp.FCodeList と TSkRegExp.TailCode を復活。
      この方が速いため。TailCode は相変わらず未使用。
    ・this|that|these のような正規表現を th(?:is|at|ese) に最適化するようにした。
      この方が速いため。
    ・連続したリテラルは TRELiteralCode を使うが、TREParserではなく、
      TSkRegExp.Optimize で生成するようにした。
      上記の最適化に対応するためと、
      将来、DFAエンジンを搭載するときにはこの方が都合が良さそうなため。
    ・Match、MatchPos、MatchLenの各プロパティの処理を、
      TREGroupsの同じ機能を持つメソッドを呼び出すようにした。
  1.0.10 2010/4/11
    ・TSkRegExp.Optimize で、行われるべき最適化処理が行われないバグを修正。
  1.0.9 2010/4/11
    ・否定先読み、否定戻り読みの NFA を変更。冗長だったので。
    ・Debug 用の NFA 要素を簡略化。
    ・未使用の ResourceString を削除。
    ・未使用のコードを削除。
    ・TRECode に ExecRepeat を追加し、単純な繰り返しはこのメソッドを使うことにした。
    ・上記変更により、繰り返し専用のクラスを削除。
    ・TREStack のデータ構造を変更。
    ・行頭、先頭を必須とする正規表現の最適化用に TSkRegExp.SetupLeadStrings を追加。
    ・NFAの最適化用に TSkRegExp.Optimize メソッドを追加。でも、まだ仕事は一つだけ。
    ・ANSI Delphi 用に WideStrUtils を uses
  1.0.8 2010/4/9
    ・TREGroups.Clear で、FMatchData の初期化が不完全だったのを修正。
    ・TSkRegExp.Compile に FMatchData の初期化処理を追加。
    ・TREParser で行っていた初期化処理の一部を TSkRegExp.Compile内で行うように修正。
  1.0.7 2010/4/9
    ・ANSI Delphi でのコンパイルエラーを修正。
  1.0.6 2010/4/8
    ・誤って作業中のファイルを公開してしまったため削除。
  1.0.5 2010/4/4
    ・ExecNext 関数のマッチがおかしかったのを修正。初期化し忘れ。
  1.0.4 2010/4/4
    ・ANSI Delphi でコンパイルできなかったのを修正。
    ※ただし、ANSI Delphi は最適化してないので遅いです。
  1.0.3 2010/4/3
    ・再帰のグループマッチの結果がPHP5(鬼車)と異なっていたのを同じ動作にした。
    ・\g で、単なる呼び出しと再帰呼び出しで処理を別にした。
    ・TREGroups データの push、pop を TREStack の中で行うようにした。
    ・上記変更に伴い、TREGroups から push、popを削除した。
    ・ソースコードの整理。
  1.0.2 2010/4/2
    ・グループより先に後方参照があるとエラーになるバグを修正。
    ・TSkRegExp 内 の CharNext, CharPrev メソッドをサロゲート対応に変更。
    ・クラス名 TRENFACode を TRENFAState に変更。
    ・使い勝手の都合で、IsLineSpace, IsAnkWord, IsUniCodeWord, IsAndDigit, IsUnicodeDigit,
      IsAndSpace, IsUnicodeSpace, IsAnkHexDigt, IsUnicodeHexDigitをメソッドから関数に変更。
    ・テスト用の仮コードを削除。
  1.0.1 2010/4/1
    ・照合エンジンを一新し、最大８倍の高速化を実現。
    ・グループの部分式呼び出し \g をサポート。再帰呼び出しにも対応。
    ・後方参照でグループ番号を相対指定できるようにした。ex. (a)(b)\k<-2>
  0.9.3 2010/1/19
    ・Delphi2009以降へ対応。
      Delphi2009 への対応については、totonicaさん、DEKOさんによる変更を、
      ほぼそのまま採用させていただきました。この場を借りて感謝いたします。
    ・TRECode.EqualsをTRECode.IsEqualに変更。Delphi2009以降のTObjectに存在するため。
    ・USC-4へ対応
    ・文字列定数を SkRegExpConst.pas に分離。英語のメッセージを用意。
    ・\x の動作を変更
    ・\u を廃止
  0.9.2 2008/1/4    条件定義にUseJapaneseOptionを追加
  0.9.1 2007/12/31  最初のバージョン
